# Set here the observables to calculate. The available variables are:
# {eps_2, ..., eps_8, phi_2, ..., phi_8, r_2, ..., r_8, n_ch, n_part, b_imp}

------------------------------------------
Functions:

    num_e21e31e41e51        [eps_2] * [eps_3] * [eps_4] * [eps_5] * cos(2*[phi_2] - 3*[phi_3] - 4*[phi_4] + 5*[phi_5]) 
    den_e22e32e42e52        [eps_2]^2 * [eps_3]^2 * [eps_4]^2 * [eps_5]^2 
    num_c21c31c41c51        ((30 * [eps_2]^4 * [eps_3]^2 * [r_2]^3 * [r_3]) / ([r_4] * [r_5])) + ((10 * [eps_2]^2 * [eps_3]^2 * [eps_4] * [r_2] * [r_3] * cos(4*([phi_2] - [phi_4]))) / [r_5]) + ((3 * [eps_2]^3 * [eps_3] * [eps_5] * [r_2]^2 * cos(-2*[phi_2] - 3*[phi_3] + 5*[phi_5])) / [r_4]) + ([eps_2] * [eps_3] * [eps_4] * [eps_5] * cos(2*[phi_2] - 3*[phi_3] - 4*[phi_4] + 5*[phi_5])) 

    den_c22c32c42c52        ([eps_2]^2 * [eps_3]^2 * [eps_4]^2 * [eps_5]^2) + ((9 * [eps_2]^6 * [eps_3]^2 * [eps_5]^2 * [r_2]^4) / [r_4]^2) + ((100 * [eps_2]^4 * [eps_3]^4 * [eps_4]^2 * [r_2]^2 * [r_3]^2) / [r_5]^2) + ((900 * [eps_2]^8 * [eps_3]^4 * [r_2]^6 * [r_3]^2) / ([r_4]^2 * [r_5]^2)) + ((3 * [eps_2]^4 * [eps_3]^2 * [eps_4] * [eps_5]^2 * [r_2]^2 * cos(4*([phi_2] - [phi_4]))) / [r_4]) + ((300 * [eps_2]^6 * [eps_3]^4 * [eps_4] * [r_2]^4 * [r_3]^2 * cos(4*([phi_2] - [phi_4]))) / ([r_4] * [r_5]^2)) + ((3 * [eps_2]^4 * [eps_3]^2 * [eps_4] * [eps_5]^2 * [r_2]^2 * cos(-4*([phi_2] - [phi_4]))) / [r_4]) + ((300 * [eps_2]^6 * [eps_3]^4 * [eps_4] * [r_2]^4 * [r_3]^2 * cos(-4*([phi_2] - [phi_4]))) / ([r_4] * [r_5]^2)) + ((10 * [eps_2]^3 * [eps_3]^3 * [eps_4]^2 * [eps_5] * [r_2] * [r_3] * cos(2*[phi_2] + 3*[phi_3] - 5*[phi_5])) / [r_5]) + ((90 * [eps_2]^7 * [eps_3]^3 * [eps_5] * [r_2]^5 * [r_3] * cos(2*[phi_2] + 3*[phi_3] - 5*[phi_5])) / ([r_4]^2 * [r_5])) + ((30 * [eps_2]^5 * [eps_3]^3 * [eps_4] * [eps_5] * [r_2]^3 *[r_3] * cos(6*[phi_2] + 3*[phi_3] - 4*[phi_4] - 5*[phi_5])) / ([r_4] * [r_5])) + ((30 * [eps_2]^5 * [eps_3]^3 * [eps_4] * [eps_5] * [r_2]^3 * [r_3] * cos(-2*[phi_2] + 3*[phi_3] + 4*[phi_4] - 5*[phi_5])) / ([r_4] * [r_5])) + ((10 * [eps_2]^3 * [eps_3]^3 * [eps_4]^2 * [eps_5] * [r_2] * [r_3] * cos(-2*[phi_2] - 3*[phi_3] + 5*[phi_5])) / [r_5]) + ((90 * [eps_2]^7 * [eps_3]^3 * [eps_5] * [r_2]^5 * [r_3] * cos(-2*[phi_2] - 3*[phi_3] + 5*[phi_5])) / ([r_4]^2 * [r_5])) + ((30 * [eps_2]^5 * [eps_3]^3 * [eps_4] * [eps_5] * [r_2]^3 * [r_3] * cos(2*[phi_2] - 3*[phi_3] - 4*[phi_4] + 5*[phi_5])) / ([r_4] * [r_5])) + ((30 * [eps_2]^5 * [eps_3]^3 * [eps_4] * [eps_5] * [r_2]^3 * [r_3] * cos(-6*[phi_2] - 3*[phi_3] + 4*[phi_4] + 5*[phi_5])) / ([r_4] * [r_5])) 
    

    num_e22e32e41e61        [eps_2]^2 * [eps_3]^2 * [eps_4] * [eps_6] * cos(4*[phi_2] + 6*[phi_3] - 4*[phi_4] - 6*[phi_6]) 
    den_e24e34e42e62        [eps_2]^4 * [eps_3]^4 * [eps_4]^2 * [eps_6]^2 
    num_c22c32c41c61        ((30 * [eps_2]^4 * [eps_3]^4 * [r_2]^2 * [r_3]^2) / ([r_4] * [r_6])) + ((90 * [eps_2]^7 * [eps_3]^2 * [r_2]^5 * cos(-6*([phi_2] - [phi_3]))) / ([r_4] * [r_6])) + ((10 * [eps_2]^2 * [eps_3]^4 * [eps_4] * [r_3]^2 * cos(4*([phi_2] -[phi_4]))) / [r_6]) + ((30 * [eps_2]^5 * [eps_3]^2 * [eps_4] * [r_2]^3 * cos(-2*[phi_2] + 6*[phi_3] - 4*[phi_4])) / [r_6]) + ((45 * [eps_2]^5 * [eps_3]^2 * [eps_4] * [r_2]^3 * cos(6*[phi_3] - 2*([phi_2] + 2*[phi_4]))) / [r_6]) + ((15 * [eps_2]^3 * [eps_3]^2 *[eps_4]^2 * [r_2] * [r_4] * cos(2*[phi_2] + 6*[phi_3] - 8*[phi_4])) / [r_6]) + ((3 * [eps_2]^4 * [eps_3]^2 * [eps_6] * [r_2]^2 * cos(6*([phi_3] - [phi_6]))) / [r_4]) + ([eps_2]^2 * [eps_3]^2 * [eps_4] * [eps_6] * cos(4*[phi_2] + 6*[phi_3] - 4*[phi_4] - 6*[phi_6])) 

    den_c24c34c42c62        (((30 * [eps_2]^4 * [eps_3]^4 * [r_2]^2 * [r_3]^2) / ([r_4] * [r_6])) + ((90 * [eps_2]^7 * [eps_3]^2 * [r_2]^5 * cos(6*([phi_2] - [phi_3]))) / ([r_4] * [r_6])) + ((10 * [eps_2]^2 * [eps_3]^4 * [eps_4] * [r_3]^2 * cos(-4*([phi_2] -[phi_4]))) / [r_6]) + ((30 * [eps_2]^5 * [eps_3]^2 * [eps_4] * [r_2]^3 * cos(2*[phi_2] - 6*[phi_3] + 4*[phi_4])) / [r_6]) + ((45 * [eps_2]^5 * [eps_3]^2 * [eps_4] * [r_2]^3 * cos(-6*[phi_3] + 2*([phi_2] + 2*[phi_4]))) / [r_6]) + ((15 * [eps_2]^3 * [eps_3]^2 *[eps_4]^2 * [r_2] * [r_4] * cos(-2*[phi_2] - 6*[phi_3] + 8*[phi_4])) / [r_6]) + ((3 * [eps_2]^4 * [eps_3]^2 * [eps_6] * [r_2]^2 * cos(-6*([phi_3] - [phi_6]))) / [r_4]) + ([eps_2]^2 * [eps_3]^2 * [eps_4] * [eps_6] * cos(-4*[phi_2] - 6*[phi_3] + 4*[phi_4] + 6*[phi_6]))) * (((30 * [eps_2]^4 * [eps_3]^4 * [r_2]^2 * [r_3]^2) / ([r_4] * [r_6])) + ((90 * [eps_2]^7 * [eps_3]^2 * [r_2]^5 * cos(-6*([phi_2] - [phi_3]))) / ([r_4] * [r_6])) + ((10 * [eps_2]^2 * [eps_3]^4 * [eps_4] * [r_3]^2 * cos(4*([phi_2] -[phi_4]))) / [r_6]) + ((30 * [eps_2]^5 * [eps_3]^2 * [eps_4] * [r_2]^3 * cos(-2*[phi_2] + 6*[phi_3] - 4*[phi_4])) / [r_6]) + ((45 * [eps_2]^5 * [eps_3]^2 * [eps_4] * [r_2]^3 * cos(6*[phi_3] - 2*([phi_2] + 2*[phi_4]))) / [r_6]) + ((15 * [eps_2]^3 * [eps_3]^2 *[eps_4]^2 * [r_2] * [r_4] * cos(2*[phi_2] + 6*[phi_3] - 8*[phi_4])) / [r_6]) + ((3 * [eps_2]^4 * [eps_3]^2 * [eps_6] * [r_2]^2 * cos(6*([phi_3] - [phi_6]))) / [r_4]) + ([eps_2]^2 * [eps_3]^2 * [eps_4] * [eps_6] * cos(4*[phi_2] + 6*[phi_3] - 4*[phi_4] - 6*[phi_6]))) 
        

    num_e23e31e41e51        [eps_2]^3 * [eps_3]^2 * [eps_4] * [eps_5] * cos(6*[phi_2] + 3*[phi_3] - 4*[phi_4] - 5*[phi_5]) 
    den_e26e32e42e52        [eps_2]^6 * [eps_3]^4 * [eps_4]^2 * [eps_5]^2    
    num_c23c31c41c51        ((30 * [eps_2]^6 * [eps_3]^2 * [r_2]^3 * [r_3]) / ([r_4] * [r_5])) + ((10 * [eps_2]^4 * [eps_3]^2 * [eps_4] * [r_2] * [r_3] * cos(4*([phi_2] - [phi_4]))) / [r_5]) + ((3 * [eps_2]^5 * [eps_3] * [eps_5] * [r_2]^2 * cos(2*[phi_2] + 3*[phi_3] - 5*[phi_5])) / [r_4]) + ([eps_2]^3 * [eps_3] * [eps_4] * [eps_5] * cos(6*[phi_2] + 3*[phi_3] - 4*[phi_4] - 5*[phi_5])) 

    den_c26c32c42c52        (((30 * [eps_2]^6 * [eps_3]^2 * [r_2]^3 * [r_3]) / ([r_4] * [r_5])) + ((10 * [eps_2]^4 * [eps_3]^2 * [eps_4] * [r_2] * [r_3] * cos(-4*([phi_2] - [phi_4]))) / [r_5]) + ((3 * [eps_2]^5 * [eps_3] * [eps_5] * [r_2]^2 * cos(-2*[phi_2] - 3*[phi_3] + 5*[phi_5])) / [r_4]) + ([eps_2]^3 * [eps_3] * [eps_4] * [eps_5] * cos(-6*[phi_2] - 3*[phi_3] + 4*[phi_4] + 5*[phi_5]))) * (((30 * [eps_2]^6 * [eps_3]^2 * [r_2]^3 * [r_3]) / ([r_4] * [r_5])) + ((10 * [eps_2]^4 * [eps_3]^2 * [eps_4] * [r_2] * [r_3] * cos(4*([phi_2] - [phi_4]))) / [r_5]) + ((3 * [eps_2]^5 * [eps_3] * [eps_5] * [r_2]^2 * cos(2*[phi_2] + 3*[phi_3] - 5*[phi_5])) / [r_4]) + ([eps_2]^3 * [eps_3] * [eps_4] * [eps_5] * cos(6*[phi_2] + 3*[phi_3] - 4*[phi_4] - 5*[phi_5]))) 
    

    num_e22e31e41e51        [eps_2]^2 * [eps_3] * [eps_4] * [eps_5] * cos(4*[phi_2] - 3*[phi_3] + 4*[phi_4] - 5*[phi_5]) 
    den_e24e32e42e52        [eps_2]^4 * [eps_3]^2 * [eps_4]^2 * [eps_5]^2   
    num_c22c31c41c51        ((30 * [eps_2]^5 * [eps_3]^2 * [r_2]^3 * [r_3] * cos(6*([phi_2] - [phi_3]))) / ([r_4] * [r_5])) + ((10 * [eps_2]^3 * [eps_3]^2 * [eps_4] * [r_2] * [r_3] * cos(2*[phi_2] - 6*[phi_3] + 4*[phi_4])) / [r_5]) + ((3 * [eps_2]^4 * [eps_3] *[eps_5] * [r_2]^2 * cos(8*[phi_2] - 3*[phi_3] - 5*[phi_5])) / [r_4]) + ([eps_2]^2 * [eps_3] * [eps_4] * [eps_5] * cos(4*[phi_2] - 3*[phi_3] + 4*[phi_4] - 5*[phi_5])) 

    den_c24c32c42c52        (((30 * [eps_2]^5 * [eps_3]^2 * [r_2]^3 * [r_3] * cos(-6*([phi_2] - [phi_3]))) / ([r_4] * [r_5])) + ((10 * [eps_2]^3 * [eps_3]^2 * [eps_4] * [r_2] * [r_3] * cos(-2*[phi_2] + 6*[phi_3] - 4*[phi_4])) / [r_5]) + ((3 * [eps_2]^4 * [eps_3] * [eps_5] * [r_2]^2 * cos(-8*[phi_2] + 3*[phi_3] + 5*[phi_5])) / [r_4]) + ([eps_2]^2 * [eps_3] * [eps_4] * [eps_5] * cos(-4*[phi_2] + 3*[phi_3] - 4*[phi_4] + 5*[phi_5]))) * (((30 * [eps_2]^5 * [eps_3]^2 * [r_2]^3 * [r_3] * cos(6*([phi_2] - [phi_3]))) / ([r_4] * [r_5])) + ((10 * [eps_2]^3 * [eps_3]^2 * [eps_4] * [r_2] * [r_3] * cos(2*[phi_2] - 6*[phi_3] + 4*[phi_4])) / [r_5]) + ((3 * [eps_2]^4 * [eps_3] *[eps_5] * [r_2]^2 * cos(8*[phi_2] - 3*[phi_3] - 5*[phi_5])) / [r_4]) + ([eps_2]^2 * [eps_3] * [eps_4] * [eps_5] * cos(4*[phi_2] - 3*[phi_3] + 4*[phi_4] - 5*[phi_5]))) 
    

    num_e21e41e51e71        [eps_2] * [eps_4] * [eps_5] * [eps_7] * cos(2*[phi_2] - 4*[phi_4] - 5*[phi_5] + 7*[phi_7]) 
    den_e22e42e52e72        [eps_2]^2 * [eps_4]^2 * [eps_5]^2 * [eps_7]^2  
    num_c21c41c51c71        ((6300 * [eps_2]^6 * [eps_3]^2 * [r_2]^5 * [r_3]^2) / ([r_4] * [r_5] * [r_7])) + ((350 * [eps_2]^2 * [eps_3]^2 * [eps_4]^2 * [r_2] * [r_3]^2 * [r_4]) / ([r_5] * [r_7])) + ((63 * [eps_2]^4 * [eps_5]^2 * [r_2]^3 * [r_5]) / ([r_4] * [r_7])) + ((2100 * [eps_2]^4 * [eps_3]^2 * [eps_4] * [r_2]^3 * [r_3]^2 * cos(4*([phi_2] - [phi_4]))) / ([r_5] * [r_7])) + ((21 * [eps_2]^2 * [eps_4] * [eps_5]^2 * [r_2] * [r_5] * cos(4*([phi_2] - [phi_4]))) / [r_7]) + ((1050 * [eps_2]^4 * [eps_3]^2 * [eps_4] * [r_2]^3 * [r_3]^2 * cos(-4*([phi_2] - [phi_4]))) / ([r_5] * [r_7])) + ((630 * [eps_2]^5 * [eps_3] * [eps_5] * [r_2]^4 * [r_3] * cos(2*[phi_2] + 3*[phi_3] - 5*[phi_5])) / ([r_4] * [r_7])) + ((35 * [eps_2] * [eps_3] * [eps_4]^2 * [eps_5] * [r_3] * [r_4] * cos(2*[phi_2] + 3*[phi_3] - 5*[phi_5])) / [r_7]) + ((210 * [eps_2]^3 * [eps_3] * [eps_4] * [eps_5] * [r_2]^2 * [r_3] * cos(6*[phi_2] + 3*[phi_3] - 4*[phi_4] - 5*[phi_5])) / [r_7]) + ((105 * [eps_2]^3 * [eps_3] * [eps_4] * [eps_5] * [r_2]^2 * [r_3] * cos(-2*[phi_2] + 3*[phi_3] + 4*[phi_4] - 5*[phi_5])) / [r_7]) + ((630 * [eps_2]^5 * [eps_3] * [eps_5] * [r_2]^4 * [r_3] * cos(-2*[phi_2] - 3*[phi_3] + 5*[phi_5])) / ([r_4] * [r_7])) + ((210 * [eps_2]^3 * [eps_3] * [eps_4] * [eps_5] * [r_2]^2 * [r_3] * cos(2*[phi_2] - 3*[phi_3] - 4*[phi_4] + 5*[phi_5])) / [r_7]) + ((30 * [eps_2]^4 * [eps_3] * [eps_7] * [r_2]^3 * [r_3] * cos(-4*[phi_2] - 3*[phi_3] + 7*[phi_7])) / ([r_4] * [r_5])) + ((10 * [eps_2]^2 * [eps_3] * [eps_4] * [eps_7] * [r_2] * [r_3] * cos(-3*[phi_3] - 4*[phi_4] + 7*[phi_7])) / [r_5]) + ((3 * [eps_2]^3 * [eps_5] * [eps_7] * [r_2]^2 * cos(-2*[phi_2] - 5*[phi_5] + 7*[phi_7])) / [r_4]) + ([eps_2] * [eps_4] * [eps_5] * [eps_7] * cos(2*[phi_2] - 4*[phi_4] - 5*[phi_5] + 7*[phi_7])) 

    den_c22c42c52c72        (((6300 * [eps_2]^6 * [eps_3]^2 * [r_2]^5 * [r_3]^2) / ([r_4] * [r_5] * [r_7])) + ((350 * [eps_2]^2 * [eps_3]^2 * [eps_4]^2 * [r_2] * [r_3]^2 * [r_4]) / ([r_5] * [r_7])) + ((63 * [eps_2]^4 * [eps_5]^2 * [r_2]^3 * [r_5]) / ([r_4] * [r_7])) + ((2100 * [eps_2]^4 * [eps_3]^2 * [eps_4] * [r_2]^3 * [r_3]^2 * cos(-4*([phi_2] - [phi_4]))) / ([r_5] * [r_7])) + ((21 * [eps_2]^2 * [eps_4] * [eps_5]^2 * [r_2] * [r_5] * cos(-4*([phi_2] - [phi_4]))) / [r_7]) + ((1050 * [eps_2]^4 * [eps_3]^2 * [eps_4] * [r_2]^3 * [r_3]^2 * cos(4*([phi_2] - [phi_4]))) / ([r_5] * [r_7])) + ((630 * [eps_2]^5 * [eps_3] * [eps_5] * [r_2]^4 * [r_3] * cos(-2*[phi_2] - 3*[phi_3] + 5*[phi_5])) / ([r_4] * [r_7])) + ((35 * [eps_2] * [eps_3] * [eps_4]^2 * [eps_5] * [r_3] * [r_4] * cos(-2*[phi_2] - 3*[phi_3] + 5*[phi_5])) / [r_7]) + ((210 * [eps_2]^3 * [eps_3] * [eps_4] * [eps_5] * [r_2]^2 * [r_3] * cos(-6*[phi_2] - 3*[phi_3] + 4*[phi_4] + 5*[phi_5])) / [r_7]) + ((105 * [eps_2]^3 * [eps_3] * [eps_4] * [eps_5] * [r_2]^2 * [r_3] * cos(2*[phi_2] - 3*[phi_3] - 4*[phi_4] + 5*[phi_5])) / [r_7]) + ((630 * [eps_2]^5 * [eps_3] * [eps_5] * [r_2]^4 * [r_3] * cos(2*[phi_2] + 3*[phi_3] - 5*[phi_5])) / ([r_4] * [r_7])) + ((210 * [eps_2]^3 * [eps_3] * [eps_4] * [eps_5] * [r_2]^2 * [r_3] * cos(-2*[phi_2] + 3*[phi_3] + 4*[phi_4] - 5*[phi_5])) / [r_7]) + ((30 * [eps_2]^4 * [eps_3] * [eps_7] * [r_2]^3 * [r_3] * cos(4*[phi_2] + 3*[phi_3] - 7*[phi_7])) / ([r_4] * [r_5])) + ((10 * [eps_2]^2 * [eps_3] * [eps_4] * [eps_7] * [r_2] * [r_3] * cos(3*[phi_3] + 4*[phi_4] - 7*[phi_7])) / [r_5]) + ((3 * [eps_2]^3 * [eps_5] * [eps_7] * [r_2]^2 * cos(2*[phi_2] + 5*[phi_5] - 7*[phi_7])) / [r_4]) + ([eps_2] * [eps_4] * [eps_5] * [eps_7] * cos(-2*[phi_2] + 4*[phi_4] + 5*[phi_5] - 7*[phi_7]))) * (((6300 * [eps_2]^6 * [eps_3]^2 * [r_2]^5 * [r_3]^2) / ([r_4] * [r_5] * [r_7])) + ((350 * [eps_2]^2 * [eps_3]^2 * [eps_4]^2 * [r_2] * [r_3]^2 * [r_4]) / ([r_5] * [r_7])) + ((63 * [eps_2]^4 * [eps_5]^2 * [r_2]^3 * [r_5]) / ([r_4] * [r_7])) + ((2100 * [eps_2]^4 * [eps_3]^2 * [eps_4] * [r_2]^3 * [r_3]^2 * cos(4*([phi_2] - [phi_4]))) / ([r_5] * [r_7])) + ((21 * [eps_2]^2 * [eps_4] * [eps_5]^2 * [r_2] * [r_5] * cos(4*([phi_2] - [phi_4]))) / [r_7]) + ((1050 * [eps_2]^4 * [eps_3]^2 * [eps_4] * [r_2]^3 * [r_3]^2 * cos(-4*([phi_2] - [phi_4]))) / ([r_5] * [r_7])) + ((630 * [eps_2]^5 * [eps_3] * [eps_5] * [r_2]^4 * [r_3] * cos(2*[phi_2] + 3*[phi_3] - 5*[phi_5])) / ([r_4] * [r_7])) + ((35 * [eps_2] * [eps_3] * [eps_4]^2 * [eps_5] * [r_3] * [r_4] * cos(2*[phi_2] + 3*[phi_3] - 5*[phi_5])) / [r_7]) + ((210 * [eps_2]^3 * [eps_3] * [eps_4] * [eps_5] * [r_2]^2 * [r_3] * cos(6*[phi_2] + 3*[phi_3] - 4*[phi_4] - 5*[phi_5])) / [r_7]) + ((105 * [eps_2]^3 * [eps_3] * [eps_4] * [eps_5] * [r_2]^2 * [r_3] * cos(-2*[phi_2] + 3*[phi_3] + 4*[phi_4] - 5*[phi_5])) / [r_7]) + ((630 * [eps_2]^5 * [eps_3] * [eps_5] * [r_2]^4 * [r_3] * cos(-2*[phi_2] - 3*[phi_3] + 5*[phi_5])) / ([r_4] * [r_7])) + ((210 * [eps_2]^3 * [eps_3] * [eps_4] * [eps_5] * [r_2]^2 * [r_3] * cos(2*[phi_2] - 3*[phi_3] - 4*[phi_4] + 5*[phi_5])) / [r_7]) + ((30 * [eps_2]^4 * [eps_3] * [eps_7] * [r_2]^3 * [r_3] * cos(-4*[phi_2] - 3*[phi_3] + 7*[phi_7])) / ([r_4] * [r_5])) + ((10 * [eps_2]^2 * [eps_3] * [eps_4] * [eps_7] * [r_2] * [r_3] * cos(-3*[phi_3] - 4*[phi_4] + 7*[phi_7])) / [r_5]) + ((3 * [eps_2]^3 * [eps_5] * [eps_7] * [r_2]^2 * cos(-2*[phi_2] - 5*[phi_5] + 7*[phi_7])) / [r_4]) + ([eps_2] * [eps_4] * [eps_5] * [eps_7] * cos(2*[phi_2] - 4*[phi_4] - 5*[phi_5] + 7*[phi_7]))) 
    

    num_e21e31e41e51e61     [eps_2] * [eps_3] * [eps_4] * [eps_5] * [eps_6] * cos(2*[phi_2] + 3*[phi_3] - 4*[phi_4] + 5*[phi_5] - 6*[phi_6]) 
    den_e22e32e42e52e62     [eps_2]^2 * [eps_3]^2 * [eps_4]^2 * [eps_5]^2 * [eps_6]^2     
    num_c21c31c41c51c61     ((300 * [eps_2]^4 * [eps_3]^4 * [r_2]^3 * [r_3]^3) / ([r_4] * [r_5] * [r_6])) + ((900 * [eps_2]^7 * [eps_3]^2 * [r_2]^6 * [r_3] * cos(-6*([phi_2] - [phi_3]))) / ([r_4] * [r_5] * [r_6])) + ((100 * [eps_2]^2 * [eps_3]^4 * [eps_4] * [r_2] * [r_3]^3 * cos(4*([phi_2] - [phi_4]))) / ([r_5] * [r_6])) + ((300 * [eps_2]^5 * [eps_3]^2 * [eps_4] * [r_2]^4 * [r_3] * cos(-2*[phi_2] + 6*[phi_3] - 4*[phi_4])) / ([r_5] * [r_6])) + ((450 * [eps_2]^5 * [eps_3]^2 * [eps_4] * [r_2]^4 * [r_3] * cos(6*[phi_3] - 2*([phi_2] + 2*[phi_4]))) / ([r_5] * [r_6])) + ((150 * [eps_2]^3 * [eps_3]^2 * [eps_4]^2 * [r_2]^2 * [r_3] * [r_4] * cos(2*[phi_2] + 6*[phi_3] - 8*[phi_4])) / ([r_5] * [r_6])) + ((30 * [eps_2]^3 * [eps_3]^3 * [eps_5] * [r_2]^2 * [r_3]^2 * cos(-2*[phi_2] - 3*[phi_3] + 5*[phi_5])) / ([r_4] * [r_6])) + ((90 * [eps_2]^6 * [eps_3] * [eps_5] * [r_2]^5 * cos(-8*[phi_2] + 3*[phi_3] + 5*[phi_5])) / ([r_4] * [r_6])) + ((10 * [eps_2] * [eps_3]^3 * [eps_4] * [eps_5] * [r_3]^2 * cos(2*[phi_2] - 3*[phi_3] - 4*[phi_4] + 5*[phi_5])) / [r_6]) + ((30 * [eps_2]^4 * [eps_3] * [eps_4] * [eps_5] * [r_2]^3 * cos(-4*[phi_2] + 3*[phi_3] - 4*[phi_4] + 5*[phi_5])) / [r_6]) + ((45 * [eps_2]^4 * [eps_3] * [eps_4] * [eps_5] * [r_2]^3 * cos(-4*[phi_2] + 3*[phi_3] - 4*[phi_4] + 5*[phi_5])) / [r_6]) + ((15 * [eps_2]^2 * [eps_3] * [eps_4]^2 * [eps_5] * [r_2] * [r_4] * cos(3*[phi_3] - 8*[phi_4] + 5*[phi_5])) / [r_6]) + ((30 * [eps_2]^4 * [eps_3]^2 * [eps_6] * [r_2]^3 * [r_3] * cos(6*([phi_3] - [phi_6]))) / ([r_4] * [r_5])) + ((10 * [eps_2]^2 * [eps_3]^2 * [eps_4] * [eps_6] * [r_2] * [r_3] * cos(4*[phi_2] + 6*[phi_3] - 4*[phi_4] - 6*[phi_6])) / [r_5]) + ((3 * [eps_2]^3 * [eps_3] * [eps_5] * [eps_6] * [r_2]^2 * cos(-2*[phi_2] + 3*[phi_3] + 5*[phi_5] - 6*[phi_6])) / [r_4]) + ([eps_2] * [eps_3] * [eps_4] * [eps_5] * [eps_6] * cos(2*[phi_2] + 3*[phi_3] - 4*[phi_4] + 5*[phi_5] - 6*[phi_6])) 

    den_c22c32c42c52c62     (((300 * [eps_2]^4 * [eps_3]^4 * [r_2]^3 * [r_3]^3) / ([r_4] * [r_5] * [r_6])) + ((900 * [eps_2]^7 * [eps_3]^2 * [r_2]^6 * [r_3] * cos(6*([phi_2] - [phi_3]))) / ([r_4] * [r_5] * [r_6])) + ((100 * [eps_2]^2 * [eps_3]^4 * [eps_4] * [r_2] * [r_3]^3 * cos(-4*([phi_2] - [phi_4]))) / ([r_5] * [r_6])) + ((300 * [eps_2]^5 * [eps_3]^2 * [eps_4] * [r_2]^4 * [r_3] * cos(2*[phi_2] - 6*[phi_3] + 4*[phi_4])) / ([r_5] * [r_6])) + ((450 * [eps_2]^5 * [eps_3]^2 * [eps_4] * [r_2]^4 * [r_3] * cos(-6*[phi_3] + 2*([phi_2] + 2*[phi_4]))) / ([r_5] * [r_6])) + ((150 * [eps_2]^3 * [eps_3]^2 * [eps_4]^2 * [r_2]^2 * [r_3] * [r_4] * cos(-2*[phi_2] - 6*[phi_3] + 8*[phi_4])) / ([r_5] * [r_6])) + ((30 * [eps_2]^3 * [eps_3]^3 * [eps_5] * [r_2]^2 * [r_3]^2 * cos(2*[phi_2] + 3*[phi_3] - 5*[phi_5])) / ([r_4] * [r_6])) + ((90 * [eps_2]^6 * [eps_3] * [eps_5] * [r_2]^5 * cos(8*[phi_2] - 3*[phi_3] - 5*[phi_5])) / ([r_4] * [r_6])) + ((10 * [eps_2] * [eps_3]^3 * [eps_4] * [eps_5] * [r_3]^2 * cos(-2*[phi_2] + 3*[phi_3] + 4*[phi_4] - 5*[phi_5])) / [r_6]) + ((30 * [eps_2]^4 * [eps_3] * [eps_4] * [eps_5] * [r_2]^3 * cos(4*[phi_2] - 3*[phi_3] + 4*[phi_4] - 5*[phi_5])) / [r_6]) + ((45 * [eps_2]^4 * [eps_3] * [eps_4] * [eps_5] * [r_2]^3 * cos(4*[phi_2] - 3*[phi_3] + 4*[phi_4] - 5*[phi_5])) / [r_6]) + ((15 * [eps_2]^2 * [eps_3] * [eps_4]^2 * [eps_5] * [r_2] * [r_4] * cos(- 3*[phi_3] + 8*[phi_4] - 5*[phi_5])) / [r_6]) + ((30 * [eps_2]^4 * [eps_3]^2 * [eps_6] * [r_2]^3 * [r_3] * cos(-6*([phi_3] - [phi_6]))) / ([r_4] * [r_5])) + ((10 * [eps_2]^2 * [eps_3]^2 * [eps_4] * [eps_6] * [r_2] * [r_3] * cos(-4*[phi_2] - 6*[phi_3] + 4*[phi_4] + 6*[phi_6])) / [r_5]) + ((3 * [eps_2]^3 * [eps_3] * [eps_5] * [eps_6] * [r_2]^2 * cos(2*[phi_2] - 3*[phi_3] - 5*[phi_5] + 6*[phi_6])) / [r_4]) + ([eps_2] * [eps_3] * [eps_4] * [eps_5] * [eps_6] * cos(-2*[phi_2] - 3*[phi_3] + 4*[phi_4] - 5*[phi_5] + 6*[phi_6]))) * (((300 * [eps_2]^4 * [eps_3]^4 * [r_2]^3 * [r_3]^3) / ([r_4] * [r_5] * [r_6])) + ((900 * [eps_2]^7 * [eps_3]^2 * [r_2]^6 * [r_3] * cos(-6*([phi_2] - [phi_3]))) / ([r_4] * [r_5] * [r_6])) + ((100 * [eps_2]^2 * [eps_3]^4 * [eps_4] * [r_2] * [r_3]^3 * cos(4*([phi_2] - [phi_4]))) / ([r_5] * [r_6])) + ((300 * [eps_2]^5 * [eps_3]^2 * [eps_4] * [r_2]^4 * [r_3] * cos(-2*[phi_2] + 6*[phi_3] - 4*[phi_4])) / ([r_5] * [r_6])) + ((450 * [eps_2]^5 * [eps_3]^2 * [eps_4] * [r_2]^4 * [r_3] * cos(6*[phi_3] - 2*([phi_2] + 2*[phi_4]))) / ([r_5] * [r_6])) + ((150 * [eps_2]^3 * [eps_3]^2 * [eps_4]^2 * [r_2]^2 * [r_3] * [r_4] * cos(2*[phi_2] + 6*[phi_3] - 8*[phi_4])) / ([r_5] * [r_6])) + ((30 * [eps_2]^3 * [eps_3]^3 * [eps_5] * [r_2]^2 * [r_3]^2 * cos(-2*[phi_2] - 3*[phi_3] + 5*[phi_5])) / ([r_4] * [r_6])) + ((90 * [eps_2]^6 * [eps_3] * [eps_5] * [r_2]^5 * cos(-8*[phi_2] + 3*[phi_3] + 5*[phi_5])) / ([r_4] * [r_6])) + ((10 * [eps_2] * [eps_3]^3 * [eps_4] * [eps_5] * [r_3]^2 * cos(2*[phi_2] - 3*[phi_3] - 4*[phi_4] + 5*[phi_5])) / [r_6]) + ((30 * [eps_2]^4 * [eps_3] * [eps_4] * [eps_5] * [r_2]^3 * cos(-4*[phi_2] + 3*[phi_3] - 4*[phi_4] + 5*[phi_5])) / [r_6]) + ((45 * [eps_2]^4 * [eps_3] * [eps_4] * [eps_5] * [r_2]^3 * cos(-4*[phi_2] + 3*[phi_3] - 4*[phi_4] + 5*[phi_5])) / [r_6]) + ((15 * [eps_2]^2 * [eps_3] * [eps_4]^2 * [eps_5] * [r_2] * [r_4] * cos(3*[phi_3] - 8*[phi_4] + 5*[phi_5])) / [r_6]) + ((30 * [eps_2]^4 * [eps_3]^2 * [eps_6] * [r_2]^3 * [r_3] * cos(6*([phi_3] - [phi_6]))) / ([r_4] * [r_5])) + ((10 * [eps_2]^2 * [eps_3]^2 * [eps_4] * [eps_6] * [r_2] * [r_3] * cos(4*[phi_2] + 6*[phi_3] - 4*[phi_4] - 6*[phi_6])) / [r_5]) + ((3 * [eps_2]^3 * [eps_3] * [eps_5] * [eps_6] * [r_2]^2 * cos(-2*[phi_2] + 3*[phi_3] + 5*[phi_5] - 6*[phi_6])) / [r_4]) + ([eps_2] * [eps_3] * [eps_4] * [eps_5] * [eps_6] * cos(2*[phi_2] + 3*[phi_3] - 4*[phi_4] + 5*[phi_5] - 6*[phi_6]))) 
    
FE

------------------------------------------
Observables:

    GE_e_psi2_npsi3_npsi4_psi5          sqrt(pi/4) * ([num_e21e31e41e51]) / sqrt([den_e22e32e42e52]) 
    GE_c_psi2_npsi3_npsi4_psi5          sqrt(pi/4) * ([num_c21c31c41c51]) / sqrt([den_c22c32c42c52]) 

    GE_e_psi2_psi3_npsi4_npsi6          sqrt(pi/4) * ([num_e22e32e41e61]) / sqrt([den_e24e34e42e62]) 
    GE_c_psi2_psi3_npsi4_npsi6          sqrt(pi/4) * ([num_c22c32c41c61]) / sqrt([den_c24c34c42c62]) 

    GE_e_psi2_psi3_npsi4_npsi5          sqrt(pi/4) * ([num_e23e31e41e51]) / sqrt([den_e26e32e42e52]) 
    GE_c_psi2_psi3_npsi4_npsi5          sqrt(pi/4) * ([num_c23c31c41c51]) / sqrt([den_c26c32c42c52]) 

    GE_e_psi2_npsi3_psi4_npsi5          sqrt(pi/4) * ([num_e22e31e41e51]) / sqrt([den_e24e32e42e52]) 
    GE_c_psi2_npsi3_psi4_npsi5          sqrt(pi/4) * ([num_c22c31c41c51]) / sqrt([den_c24c32c42c52]) 

    GE_e_psi2_npsi4_npsi5_psi7          sqrt(pi/4) * ([num_e21e41e51e71]) / sqrt([den_e22e42e52e72]) 
    GE_c_psi2_npsi4_npsi5_psi7          sqrt(pi/4) * ([num_c21c41c51c71]) / sqrt([den_c22c42c52c72]) 

    GE_e_psi2_psi3_npsi4_psi5_npsi6     sqrt(pi/4) * ([num_e21e31e41e51e61]) / sqrt([den_e22e32e42e52e62]) 
    GE_c_psi2_psi3_npsi4_psi5_npsi6     sqrt(pi/4) * ([num_c21c31c41c51c61]) / sqrt([den_c22c32c42c52c62]) 

OE