# Set here the observables to calculate. The available variables are:
# {eps_2, ..., eps_8, phi_2, ..., phi_8, r_2, ..., r_8, n_ch, n_part, b_imp}

------------------------------------------
Functions:
    mean_e22                [eps_2]^2 
    mean_e32                [eps_3]^2 
    mean_e42                [eps_4]^2 
    mean_e52                [eps_5]^2 
    mean_e62                [eps_6]^2 

    mean_e22e32             [eps_2]^2 * [eps_3]^2 
    mean_e22e42             [eps_2]^2 * [eps_4]^2 
    mean_e32e42             [eps_3]^2 * [eps_4]^2 
    mean_e22e52             [eps_2]^2 * [eps_5]^2 
    mean_e32e52             [eps_3]^2 * [eps_5]^2 
    mean_e42e52             [eps_4]^2 * [eps_5]^2 
    mean_e22e62             [eps_2]^2 * [eps_6]^2 
    mean_e32e62             [eps_3]^2 * [eps_6]^2 
    mean_e42e62             [eps_4]^2 * [eps_6]^2 

    mean_c42                [eps_4]^2 + ((9 * [eps_2]^4 * [r_2]^4) / [r_4]^2) + ((6 * [eps_2]^2 * [eps_4] * [r_2]^2 * cos(4*([phi_2] - [phi_4]))) / [r_4]) 
    
    mean_c52                [eps_5]^2 + ((100 * [eps_2]^2 * [eps_3]^2 * [r_2]^2 * [r_3]^2) / [r_5]^2) + ((20 * [eps_2] * [eps_3] * [eps_5] * [r_2] * [r_3] * cos(2*[phi_2] + 3*[phi_3] - 5*[phi_5])) / [r_5]) 
    
    mean_c62                ([eps_6]^2) + ((900 * [eps_2]^6 * [r_2]^6) / [r_6]^2) + ((100 * [eps_3]^4 * [r_3]^4) / [r_6]^2) + ((225 * [eps_2]^2 * [eps_4]^2 * [r_2]^2 * [r_4]^2) / [r_6]^2) + ((300 * [eps_2]^3 * [eps_3]^2 * [r_2]^3 * [r_3]^2 * cos(6*([phi_2] - [phi_3]))) / [r_6]^2) + ((300 * [eps_2]^3 * [eps_3]^2 * [r_2]^3 * [r_3]^2 * cos(-6*([phi_2] - [phi_3]))) / [r_6]^2) + ((450 * [eps_2]^4 * [eps_4] * [r_2]^4 * [r_4] * cos(4*([phi_2] - [phi_4]))) / [r_6]^2) + ((150 * [eps_2] * [eps_3]^2 * [eps_4] * [r_2] * [r_3]^2 * [r_4] * cos(6*[phi_3] - 2*([phi_2] + 2*[phi_4]))) / [r_6]^2) + ((450 * [eps_2]^4 * [eps_4] * [r_2]^4 * [r_4] * cos(4*([phi_2] + [phi_4]))) / [r_6]^2) + ((150 * [eps_2] * [eps_3]^2 * [eps_4] * [r_2] * [r_3]^2 * [r_4] * cos(-6*[phi_3] + 2*([phi_2] + 2*[phi_4]))) / [r_6]^2) + ((30 * [eps_2]^3 * [eps_6] * [r_2]^3 * cos(6*([phi_2] - [phi_6]))) / [r_6]) + ((10 * [eps_3]^2 * [eps_6] * [r_3]^2 * cos(6*([phi_3] - [phi_6]))) / [r_6]) + ((15 * [eps_2] * [eps_4] * [eps_6] * [r_2] * [r_4] * cos(2*([phi_2] + 2*[phi_4]) - 6*[phi_6])) / [r_6]) + ((30 * [eps_2]^3 * [eps_6] * [r_2]^3 * cos(-6*([phi_2] - [phi_6]))) / [r_6]) + ((10 * [eps_3]^2 * [eps_6] * [r_3]^2 * cos(-6*([phi_3] - [phi_6]))) / [r_6]) + ((15 * [eps_2] * [eps_4] * [eps_6] * [r_2] * [r_4] * cos(-2*([phi_2] + 2*[phi_4]) + 6*[phi_6])) / [r_6]) 

    mean_c22c42             ([eps_2]^2 * [eps_4]^2) + ((9 * [eps_2]^6 * [r_2]^4) / [r_4]^2) + ((6 * [eps_2]^4 * [eps_4] * [r_2]^2 * cos(4*([phi_2] - [phi_4]))) / [r_4]) 

    mean_c32c42             ([eps_3]^2 * [eps_4]^2) + ((9 * [eps_2]^4 * [eps_3]^2 * [r_2]^4) / [r_4]^2) + ((3 * [eps_2]^2 * [eps_3]^2 * [eps_4] * [r_2]^2 * cos(4*([phi_2] - [phi_4]))) / [r_4]) + ((3 * [eps_2]^2 * [eps_3]^2 * [eps_4] * [r_2]^2 * cos(-4*([phi_2] - [phi_4]))) / [r_4]) 

    mean_c22c52             ([eps_2]^2 * [eps_5]^2) + ((100 * [eps_2]^4 * [eps_3]^2 * [r_2]^2 * [r_3]^2) / [r_5]^2) + ((10 * [eps_2]^3 * [eps_3] * [eps_5] * [r_2] * [r_3] * cos(2*[phi_2] + 3*[phi_3] - 5*[phi_5])) / [r_5]) + ((10 * [eps_2]^3 * [eps_3] * [eps_5] * [r_2] * [r_3] * cos(-2*[phi_2] - 3*[phi_3] + 5*[phi_5])) / [r_5]) 

    mean_c32c52             ([eps_3]^2 * [eps_5]^2) + ((100 * [eps_2]^2 * [eps_3]^4 * [r_2]^2 * [r_3]^2) / [r_5]^2) + ((10 * [eps_2] * [eps_3]^3 * [eps_5] * [r_2] * [r_3] * cos(2*[phi_2] + 3*[phi_3] - 5*[phi_5])) / [r_5]) + ((10 * [eps_2] * [eps_3]^3 * [eps_5] * [r_2] * [r_3] * cos(-2*[phi_2] - 3*[phi_3] + 5*[phi_5])) / [r_5]) 

    mean_c42c52             ([eps_4]^2 * [eps_5]^2) + ((9 * [eps_2]^4 * [eps_5]^2 * [r_2]^4) / [r_4]^2) + ((100 * [eps_2]^2 * [eps_3]^2 * [eps_4]^2 * [r_2]^2 * [r_3]^2) / [r_5]^2) + ((900 * [eps_2]^6 * [eps_3]^2 * [r_2]^6 * [r_3]^2) / ([r_4]^2 * [r_5]^2)) + ((3 * [eps_2]^2 * [eps_4] * [eps_5]^2 * [r_2]^2 * cos(4*([phi_2] - [phi_4]))) / [r_4]) + ((300 * [eps_2]^4 * [eps_3]^2 * [eps_4] * [r_2]^4 * [r_3]^2 * cos(4*([phi_2] - [phi_4]))) / ([r_4] * [r_5]^2)) + ((3 * [eps_2]^2 * [eps_4] * [eps_5]^2 * [r_2]^2 * cos(-4*([phi_2] - [phi_4]))) / [r_4]) + ((300 * [eps_2]^4 * [eps_3]^2 * [eps_4] * [r_2]^4 * [r_3]^2 * cos(-4*([phi_2] - [phi_4]))) / ([r_4] * [r_5]^2)) + ((10 * [eps_2] * [eps_3] * [eps_4]^2 * [eps_5] * [r_2] * [r_3] * cos(2*[phi_2] + 3*[phi_3] - 5*[phi_5])) / [r_5]) + ((90 * [eps_2]^5 * [eps_3] * [eps_5] * [r_2]^5 * [r_3] * cos(2*[phi_2] + 3*[phi_3] - 5*[phi_5])) / ([r_4]^2 * [r_5])) + ((30 * [eps_2]^3 * [eps_3] * [eps_4] * [eps_5] * [r_2]^3 * [r_3] * cos(6*[phi_2] + 3*[phi_3] - 4*[phi_4] - 5*[phi_5])) / ([r_4] * [r_5])) + ((30 * [eps_2]^3 * [eps_3] * [eps_4] * [eps_5] * [r_2]^3 * [r_3] * cos(-2*[phi_2] + 3*[phi_3] + 4*[phi_4] - 5*[phi_5])) / ([r_4] * [r_5])) + ((10 * [eps_2] * [eps_3] * [eps_4]^2 * [eps_5] * [r_2] * [r_3] * cos(-2*[phi_2] - 3*[phi_3] + 5*[phi_5])) / [r_5]) + ((90 * [eps_2]^5 * [eps_3] * [eps_5] * [r_2]^5 * [r_3] * cos(-2*[phi_2] - 3*[phi_3] + 5*[phi_5])) / ([r_4]^2 * [r_5])) + ((30 * [eps_2]^3 * [eps_3] * [eps_4] * [eps_5] * [r_2]^3 * [r_3] * cos(2*[phi_2] - 3*[phi_3] - 4*[phi_4] + 5*[phi_5])) / ([r_4] * [r_5])) + ((30 * [eps_2]^3 * [eps_3] * [eps_4] * [eps_5] * [r_2]^3 * [r_3] * cos(-6*[phi_2] - 3*[phi_3] + 4*[phi_4] + 5*[phi_5])) / ([r_4] * [r_5])) 

    mean_c22c62             ([eps_2]^2 * [eps_6]^2) + ((900 * [eps_2]^8 * [r_2]^6) / [r_6]^2) + ((100 * [eps_2]^2 * [eps_3]^4 * [r_3]^4) / [r_6]^2) + ((225 * [eps_2]^4 * [eps_4]^2 * [r_2]^2 * [r_4]^2) / [r_6]^2) + ((300 * [eps_2]^5 * [eps_3]^2 * [r_2]^3 * [r_3]^2 * cos(6*([phi_2] - [phi_3]))) / [r_6]^2) + ((300 * [eps_2]^5 * [eps_3]^2 * [r_2]^3 * [r_3]^2 * cos(-6*([phi_2] - [phi_3]))) / [r_6]^2) + ((450 * [eps_2]^6 * [eps_4] * [r_2]^4 * [r_4] * cos(4*([phi_2] - [phi_4]))) / [r_6]^2) + ((150 * [eps_2]^3 * [eps_3]^2 *[eps_4] * [r_2] * [r_3]^2 * [r_4] * cos(6*[phi_3] - 2*([phi_2] + 2*[phi_4]))) / [r_6]^2) + ((450 * [eps_2]^6 * [eps_4] * [r_2]^4 * [r_4] * cos(-6*[phi_2] + 2*([phi_2] + 2*[phi_4]))) / [r_6]^2) + ((150 * [eps_2]^3 * [eps_3]^2 * [eps_4] * [r_2] * [r_3]^2 * [r_4] * cos(-6*[phi_3] + 2*([phi_2] + 2*[phi_4]))) / [r_6]^2) + ((30 * [eps_2]^5 * [eps_6] * [r_2]^3 * cos(6*([phi_2] - [phi_6]))) / [r_6]) + ((10 * [eps_2]^2 * [eps_3]^2 * [eps_6] * [r_3]^2 * cos(6*([phi_3] - [phi_6]))) / [r_6]) + ((15 * [eps_2]^3 * [eps_4] * [eps_6] * [r_2] * [r_4] * cos(2*([phi_2] + 2*[phi_4]) - 6*[phi_6])) / [r_6]) + ((30 * [eps_2]^5 * [eps_6] * [r_2]^3 * cos(-6*([phi_2] - [phi_6]))) / [r_6]) + ((10 * [eps_2]^2 * [eps_3]^2 * [eps_6] * [r_3]^2 * cos(-6*([phi_3] - [phi_6]))) / [r_6]) + ((15 * [eps_2]^3 * [eps_4] * [eps_6] * [r_2] * [r_4] * cos(-2*([phi_2] + 2*[phi_4]) + 6*[phi_6])) / [r_6]) 

    mean_c32c62              ([eps_3]^2 * [eps_6]^2) + ((900 * [eps_2]^6 * [eps_3]^2 * [r_2]^6) / [r_6]^2) + ((100 * [eps_3]^6 * [r_3]^4) / [r_6]^2) + ((225 * [eps_2]^2 * [eps_3]^2 * [eps_4]^2 * [r_2]^2 * [r_4]^2) / [r_6]^2) + ((300 * [eps_2]^3 * [eps_3]^4 * [r_2]^3 * [r_3]^2 * cos(6*([phi_2] - [phi_3]))) / [r_6]^2) + ((300 * [eps_2]^3 * [eps_3]^4 * [r_2]^3 * [r_3]^2 * cos(-6*([phi_2] - [phi_3]))) / [r_6]^2) + ((450 * [eps_2]^4 * [eps_3]^2 * [eps_4] * [r_2]^4 * [r_4] * cos(4*([phi_2] - [phi_4]))) / [r_6]^2) + ((150 * [eps_2] * [eps_3]^4 * [eps_4] * [r_2] * [r_3]^2 * [r_4] * cos(6*[phi_3] - 2*([phi_2] + 2*[phi_4]))) / [r_6]^2) + ((450 * [eps_2]^4 * [eps_3]^2 * [eps_4] * [r_2]^4 * [r_4] * cos(-6*[phi_2] + 2*([phi_2] + 2*[phi_4]))) / [r_6]^2) + ((150 * [eps_2] * [eps_3]^4 * [eps_4] * [r_2] * [r_3]^2 * [r_4] * cos(-6*[phi_3] + 2*([phi_2] + 2*[phi_4]))) / [r_6]^2) + ((30 * [eps_2]^3 * [eps_3]^2 * [eps_6] * [r_2]^3 * cos(6*([phi_2] - [phi_6]))) / [r_6]) + ((10 * [eps_3]^4 * [eps_6] * [r_3]^2 * cos(6*([phi_3] - [phi_6]))) / [r_6]) + ((15 * [eps_2] * [eps_3]^2 * [eps_4] * [eps_6] * [r_2] * [r_4] * cos(2*([phi_2] + 2*[phi_4]) - 6*[phi_6])) / [r_6]) + ((30 * [eps_2]^3 * [eps_3]^2 * [eps_6] * [r_2]^3 * cos(-6*([phi_2] - [phi_6]))) / [r_6]) + ((10 * [eps_3]^4 * [eps_6] * [r_3]^2 * cos(-6*([phi_3] - [phi_6]))) / [r_6]) + ((15 * [eps_2] * [eps_3]^2 * [eps_4] * [eps_6] * [r_2] * [r_4] * cos(-2*([phi_2] + 2*[phi_4]) + 6*[phi_6])) / [r_6]) 

    mean_c42c62             ([eps_4]^2 * [eps_6]^2) + ((9 * [eps_2]^4 * [eps_6]^2 * [r_2]^4) / [r_4]^2) + ((2925 * [eps_2]^6 * [eps_4]^2 * [r_2]^6) / [r_6]^2) + ((100 * [eps_3]^4 * [eps_4]^2 * [r_3]^4) / [r_6]^2) + ((8100 * [eps_2]^10 * [r_2]^10) / ([r_4]^2 * [r_6]^2)) + ((900 * [eps_2]^4 * [eps_3]^4 * [r_2]^4 * [r_3]^4) / ([r_4]^2 * [r_6]^2)) + ((225 * [eps_2]^2 * [eps_4]^4 * [r_2]^2 * [r_4]^2) / [r_6]^2) + ((300 * [eps_2]^3 * [eps_3]^2 * [eps_4]^2 * [r_2]^3 * [r_3]^2 * cos(6*([phi_2] - [phi_3]))) / [r_6]^2) + ((2700 * [eps_2]^7 * [eps_3]^2 * [r_2]^7 * [r_3]^2 * cos(6*([phi_2] - [phi_3]))) / ([r_4]^2 * [r_6]^2)) + ((300 * [eps_2]^3 * [eps_3]^2 * [eps_4]^2 * [r_2]^3 * [r_3]^2 * cos(-6*([phi_2] - [phi_3]))) / [r_6]^2) + ((2700 * [eps_2]^7 * [eps_3]^2 * [r_2]^7 * [r_3]^2 * cos(-6*([phi_2] - [phi_3]))) / ([r_4]^2 * [r_6]^2)) + ((3 * [eps_2]^2 * [eps_4] * [eps_6]^2 * [r_2]^2 * cos(4*([phi_2] - [phi_4]))) / [r_4]) + ((2700 * [eps_2]^8 * [eps_4] * [r_2]^8 * cos(4*([phi_2] - [phi_4]))) / ([r_4] * [r_6]^2)) + ((300 * [eps_2]^2 * [eps_3]^4 * [eps_4] * [r_2]^2 * [r_3]^4 * cos(4*([phi_2] - [phi_4]))) / ([r_4] * [r_6]^2)) + ((675 * [eps_2]^4 * [eps_4]^3 * [r_2]^4 * [r_4] * cos(4*([phi_2] - [phi_4]))) / [r_6]^2) + ((900 * [eps_2]^5 * [eps_3]^2 * [eps_4] * [r_2]^5 * [r_3]^2 * cos(10*[phi_2] - 6*[phi_3] - 4*[phi_4])) / ([r_4] * [r_6]^2)) + ((900 * [eps_2]^5 * [eps_3]^2 * [eps_4] * [r_2]^5 * [r_3]^2 * cos(-2*[phi_2] + 6*[phi_3] - 4*[phi_4])) / ([r_4] * [r_6]^2)) + ((3 * [eps_2]^2 * [eps_4] * [eps_6]^2 * [r_2]^2 * cos(-4*([phi_2] - [phi_4]))) / [r_4]) + ((2700 * [eps_2]^8 * [eps_4] * [r_2]^8 * cos(-4*([phi_2] - [phi_4]))) / ([r_4] * [r_6]^2)) + ((300 * [eps_2]^2 * [eps_3]^4 * [eps_4] * [r_2]^2 * [r_3]^4 * cos(-4*([phi_2] - [phi_4]))) / ([r_4] * [r_6]^2)) + ((675 * [eps_2]^4 * [eps_4]^3 * [r_2]^4 * [r_4] * cos(-4*([phi_2] - [phi_4]))) / [r_6]^2) + ((900 * [eps_2]^5 * [eps_3]^2 * [eps_4] * [r_2]^5 * [r_3]^2 * cos(2*[phi_2] - 6*[phi_3] + 4*[phi_4])) / ([r_4] * [r_6]^2)) + ((900 * [eps_2]^5 * [eps_3]^2 * [eps_4] * [r_2]^5 * [r_3]^2 * cos(-10*[phi_2] + 6*[phi_3] + 4*[phi_4])) / ([r_4] * [r_6]^2)) + ((4050 * [eps_2]^8 * [eps_4] * [r_2]^8 * cos(4*([phi_2] - [phi_4]))) / ([r_4] * [r_6]^2)) + ((450 * [eps_2]^4 * [eps_4]^3 * [r_2]^4 * [r_4] * cos(4*([phi_2] - [phi_4]))) / [r_6]^2) + ((1350 * [eps_2]^5 * [eps_3]^2 * [eps_4] * [r_2]^5 * [r_3]^2 * cos(6*[phi_3] - 2*([phi_2] + 2*[phi_4]))) / ([r_4] * [r_6]^2)) + ((150 * [eps_2] * [eps_3]^2 * [eps_4]^3 * [r_2] * [r_3]^2 * [r_4] * cos(6*[phi_3] - 2*([phi_2] + 2*[phi_4]))) / [r_6]^2) + ((1350 * [eps_2]^6 * [eps_4]^2 * [r_2]^6 * cos(8*([phi_2] - [phi_4]))) / [r_6]^2) + ((450 * [eps_2]^3 * [eps_3]^2 * [eps_4]^2 * [r_2]^3 * [r_3]^2 * cos(2*[phi_2] + 6*[phi_3] - 8*[phi_4])) / [r_6]^2) + ((1350 * [eps_2]^6 * [eps_4]^2 * [r_2]^6) / [r_6]^2) + ((450 * [eps_2]^3 * [eps_3]^2 * [eps_4]^2 * [r_2]^3 * [r_3]^2 * cos(-4*[phi_2] + 6*[phi_3] + 4*[phi_4] - 2*([phi_2] + 2*[phi_4]))) / [r_6]^2) + ((4050 * [eps_2]^8 * [eps_4] * [r_2]^8 * cos(-4*([phi_2] - [phi_4]))) / ([r_4] * [r_6]^2)) + ((450 * [eps_2]^4 * [eps_4]^3 * [r_2]^4 * [r_4] * cos(-6*[phi_2] + 2*([phi_2] + 2*[phi_4]))) / [r_6]^2) + ((1350 * [eps_2]^5 * [eps_3]^2 * [eps_4] * [r_2]^5 * [r_3]^2 * cos(-6*[phi_3] + 2*([phi_2] + 2*[phi_4]))) / ([r_4] * [r_6]^2)) + ((150 * [eps_2] * [eps_3]^2 * [eps_4]^3 * [r_2] * [r_3]^2 * [r_4] * cos(-6*[phi_3] + 2*([phi_2] + 2*[phi_4]))) / [r_6]^2) + ((1350 * [eps_2]^6 * [eps_4]^2 * [r_2]^6) / [r_6]^2) + ((450 * [eps_2]^3 * [eps_3]^2 * [eps_4]^2 * [r_2]^3 * [r_3]^2 * cos(4*[phi_2] - 6*[phi_3] - 4*[phi_4] + 2*([phi_2] + 2*[phi_4]))) / [r_6]^2) + ((1350 * [eps_2]^6 * [eps_4]^2 * [r_2]^6 * cos(-10*[phi_2] + 4*[phi_4] + 2*([phi_2] + 2*[phi_4]))) / [r_6]^2) + ((450 * [eps_2]^3 * [eps_3]^2 * [eps_4]^2 * [r_2]^3 * [r_3]^2 * cos(-4*[phi_2] - 6*[phi_3] + 4*[phi_4] + 2*([phi_2] + 2*[phi_4]))) / [r_6]^2) + ((30 * [eps_2]^3 * [eps_4]^2 * [eps_6] * [r_2]^3 * cos(6*[phi_2] - 6*[phi_6])) / [r_6]) + ((270 * [eps_2]^7 * [eps_6] * [r_2]^7 * cos(6*[phi_2] - 6*[phi_6])) / ([r_4]^2 * [r_6])) + ((10 * [eps_3]^2 * [eps_4]^2 * [eps_6] * [r_3]^2 * cos(6*[phi_3] - 6*[phi_6])) / [r_6]) + ((90 * [eps_2]^4 * [eps_3]^2 * [eps_6] * [r_2]^4 * [r_3]^2 * cos(6*[phi_3] - 6*[phi_6])) / ([r_4]^2 * [r_6])) + ((90 * [eps_2]^5 * [eps_4] * [eps_6] * [r_2]^5 * cos(10*[phi_2] - 4*[phi_4] - 6*[phi_6])) / ([r_4] * [r_6])) + ((30 * [eps_2]^2 * [eps_3]^2 * [eps_4] * [eps_6] * [r_2]^2 * [r_3]^2 * cos(4*[phi_2] + 6*[phi_3] - 4*[phi_4] - 6*[phi_6])) / ([r_4]*[r_6])) + ((90 * [eps_2]^5 * [eps_4] * [eps_6] * [r_2]^5 * cos(2*[phi_2] + 4*[phi_4] - 6*[phi_6])) / ([r_4] * [r_6])) + ((30 * [eps_2]^2 * [eps_3]^2 * [eps_4] * [eps_6] * [r_2]^2 * [r_3]^2 * cos(-4*[phi_2] + 6*[phi_3] + 4*[phi_4] - 6*[phi_6])) / ([r_4]*[r_6])) + ((135 * [eps_2]^5 * [eps_4] * [eps_6] * [r_2]^5 * cos(2*([phi_2] + 2*[phi_4]) - 6*[phi_6])) / ([r_4] * [r_6])) + ((15 * [eps_2] * [eps_4]^3 * [eps_6] * [r_2] * [r_4] * cos(2*([phi_2] + 2*[phi_4]) - 6*[phi_6])) / [r_6]) + ((45 * [eps_2]^3 * [eps_4]^2 * [eps_6] * [r_2]^3 * cos(4*[phi_2] - 4*[phi_4] + 2*([phi_2] + 2*[phi_4]) - 6*[phi_6])) / [r_6]) + ((45 * [eps_2]^3 * [eps_4]^2 * [eps_6] * [r_2]^3 * cos(-4*[phi_2] + 4*[phi_4] + 2*([phi_2] + 2*[phi_4]) - 6*[phi_6])) / [r_6]) + ((30 * [eps_2]^3 * [eps_4]^2 * [eps_6] * [r_2]^3 * cos(-6*[phi_2] + 6*[phi_6])) / [r_6]) + ((270 * [eps_2]^7 * [eps_6] * [r_2]^7 * cos(-6*[phi_2] + 6*[phi_6])) / ([r_4]^2 * [r_6])) + ((10 * [eps_3]^2 * [eps_4]^2 * [eps_6] * [r_3]^2 * cos(-6*[phi_3] + 6*[phi_6])) / [r_6]) + ((90 * [eps_2]^4 * [eps_3]^2 * [eps_6] * [r_2]^4 * [r_3]^2 * cos(-6*[phi_3] + 6*[phi_6])) / ([r_4]^2 * [r_6])) + ((90 * [eps_2]^5 * [eps_4] * [eps_6] * [r_2]^5 * cos(-2*[phi_2] - 4*[phi_4] + 6*[phi_6])) / ([r_4] * [r_6])) + ((30 * [eps_2]^2 * [eps_3]^2 * [eps_4] * [eps_6] * [r_2]^2 * [r_3]^2 * cos(4*[phi_2] - 6*[phi_3] - 4*[phi_4] + 6*[phi_6])) / ([r_4] * [r_6])) + ((90 * [eps_2]^5 * [eps_4] * [eps_6] * [r_2]^5 * cos(-10*[phi_2] + 4*[phi_4] + 6*[phi_6])) / ([r_4] * [r_6])) + ((30 * [eps_2]^2 * [eps_3]^2 * [eps_4] * [eps_6] * [r_2]^2 * [r_3]^2 * cos(-4*[phi_2] - 6*[phi_3] + 4*[phi_4] + 6*[phi_6])) / ([r_4] * [r_6])) + ((135 * [eps_2]^5 * [eps_4] * [eps_6] * [r_2]^5 * cos(-2*([phi_2] + 2*[phi_4]) + 6*[phi_6])) / ([r_4] * [r_6])) + ((15 * [eps_2] * [eps_4]^3 * [eps_6] * [r_2] * [r_4] * cos(-2*([phi_2] + 2*[phi_4]) + 6*[phi_6])) / [r_6]) + ((45 * [eps_2]^3 * [eps_4]^2 * [eps_6] * [r_2]^3 * cos(4*[phi_2] - 4*[phi_4] - 2*([phi_2] + 2*[phi_4]) + 6*[phi_6])) / [r_6]) + ((45 * [eps_2]^3 * [eps_4]^2 * [eps_6] * [r_2]^3 * cos(-4*[phi_2] + 4*[phi_4] - 2*([phi_2] + 2*[phi_4]) + 6*[phi_6])) / [r_6]) 

FE

------------------------------------------
Observables:
    NSC_e2_e3               ([mean_e22e32] - [mean_e22]*[mean_e32]) / ([mean_e22]*[mean_e32]) 
    NSC_c2_c3               ([mean_e22e32] - [mean_e22]*[mean_e32]) / ([mean_e22]*[mean_e32]) 

    NSC_e2_e4               ([mean_e22e42] - [mean_e22]*[mean_e42]) / ([mean_e22]*[mean_e42])  
    NSC_c2_c4               ([mean_c22c42] - [mean_e22]*[mean_c42]) / ([mean_e22]*[mean_c42]) 

    NSC_e3_e4               ([mean_e32e42] - [mean_e32]*[mean_e42]) / ([mean_e32]*[mean_e42]) 
    NSC_c3_c4               ([mean_c32c42] - [mean_e32]*[mean_c42]) / ([mean_e32]*[mean_c42]) 

    NSC_e2_e5               ([mean_e22e52] - [mean_e22]*[mean_e52]) / ([mean_e22]*[mean_e52]) 
    NSC_c2_c5               ([mean_c22c52] - [mean_e22]*[mean_c52]) / ([mean_e22]*[mean_c52]) 

    NSC_e3_e5               ([mean_e32e52] - [mean_e32]*[mean_e52]) / ([mean_e32]*[mean_e52]) 
    NSC_c3_c5               ([mean_c32c52] - [mean_e32]*[mean_c52]) / ([mean_e32]*[mean_c52]) 

    NSC_e4_e5               ([mean_e42e52] - [mean_e42]*[mean_e52]) / ([mean_e42]*[mean_e52]) 
    NSC_c4_c5               ([mean_c42c52] - [mean_c42]*[mean_c52]) / ([mean_c42]*[mean_c52]) 

    NSC_e2_e6               ([mean_e22e62] - [mean_e22]*[mean_e62]) / ([mean_e22]*[mean_e62]) 
    NSC_c2_c6               ([mean_c22c62] - [mean_e22]*[mean_c62]) / ([mean_e22]*[mean_c62]) 

    NSC_e3_e6               ([mean_e32e62] - [mean_e32]*[mean_e62]) / ([mean_e32]*[mean_e62]) 
    NSC_c3_c6               ([mean_c32c62] - [mean_e32]*[mean_c62]) / ([mean_e32]*[mean_c62]) 

    NSC_e4_e6               ([mean_e42e62] - [mean_e42]*[mean_e62]) / ([mean_e42]*[mean_e62]) 
    NSC_c4_c6               ([mean_c42c62] - [mean_c42]*[mean_c62]) / ([mean_c42]*[mean_c62]) 

OE
