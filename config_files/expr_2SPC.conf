# Set here the observables to calculate. The available variables are:
# {eps_2, ..., eps_8, phi_2, ..., phi_8, r_2, ..., r_8, n_ch, n_part, b_imp}

------------------------------------------
Functions:
    num_e23e32              [eps_2]^3 * [eps_3]^2 * cos(6*([phi_2] - [phi_3])) 
    den_e26e34              [eps_2]^6 * [eps_3]^4 


    num_e22e41              [eps_2]^2 * [eps_4] * cos(4*([phi_2] - [phi_4])) 
    den_e24e42              [eps_2]^4 * [eps_4]^2 
    num_c22c41              ((3 * [eps_2]^4 * [r_2]^2) / [r_4]) + ([eps_2]^2 * [eps_4] * cos(4*([phi_2] - [phi_4]))) 
    den_c24c42              ([eps_2]^4 * [eps_4]^2) + ((9 * [eps_2]^8 *[r_2]^4) / [r_4]^2) + ((6 * [eps_2]^6 * [eps_4] * [r_2]^2 * cos(4*([phi_2] - [phi_4]))) / [r_4]) 


    num_e24e42              [eps_2]^4 * [eps_4]^2 * cos(8*([phi_2] - [phi_4])) 
    den_e28e44              [eps_2]^8 * [eps_4]^4 
    num_c24c42              ((9 * [eps_2]^8 * [r_2]^4) / [r_4]^2) + ((6 * [eps_2]^6 * [eps_4] * [r_2]^2 * cos(-4*([phi_2] - [phi_4]))) / [r_4]) + ([eps_2]^4 * [eps_4]^2 * cos(-8*([phi_2] - [phi_4]))) 
    den_c28c44              ([eps_2]^8 * [eps_4]^4) + ((81 * [eps_2]^16 * [r_2]^8) / [r_4]^4) + ((36 * [eps_2]^12 * [eps_4]^2 * [r_2]^4) / [r_4]^2) + ((54 * [eps_2]^14 * [eps_4] * [r_2]^6 * cos(4*([phi_2] - [phi_4]))) / [r_4]^3) + ((6 * [eps_2]^10 * [eps_4]^3 * [r_2]^2 * cos(4*([phi_2] - [phi_4]))) / [r_4]) + ((54 * [eps_2]^14 * [eps_4] * [r_2]^6 * cos(-4*([phi_2] - [phi_4]))) / [r_4]^3) + ((6 * [eps_2]^10 * [eps_4]^3 * [r_2]^2 * cos(-4*([phi_2] - [phi_4]))) / [r_4]) + ((9 * [eps_2]^12 * [eps_4]^2 * [r_2]^4 * cos(8*([phi_2] - [phi_4]))) / [r_4]^2) + ((9 * [eps_2]^12 * [eps_4]^2 * [r_2]^4 * cos(-8*([phi_2] - [phi_4]))) / [r_4]^2) 


    num_e24e81              [eps_2]^4 * [eps_8] * cos(8*([phi_2] - [phi_8])) 
    den_e28e82              [eps_2]^8 * [eps_8]^2 
    num_c24c81              ((630 * [eps_2]^8 * [r_2]^4) / [r_8]) + ((560 * [eps_2]^5 * [eps_3]^2 * [r_2] * [r_3]^2 * cos(6*([phi_3] - [phi_2]))) / [r_8]) + ((35 * [eps_2]^4 * [eps_4]^2 * [r_4]^2 * cos(8*([phi_4] - [phi_2]))) / [r_8]) + ((420 * [eps_2]^6 * [eps_4] * [r_2]^2 * [r_4] * cos(4*([phi_4] - [phi_2]))) / [r_8]) + ((56 * [eps_2]^4 * [eps_3] * [eps_5] * [r_3] * [r_5] * cos(-8*[phi_2] + 3*[phi_3] + 5*[phi_5])) / [r_8]) + ((28 * [eps_2]^5 * [eps_6] * [r_2] * [r_6] * cos(6*([phi_6] - [phi_2]))) / [r_8]) + ([eps_2]^4 * [eps_8] * cos(8*([phi_8] - [phi_2]))) 
    
    den_c28c82              (((630 * [eps_2]^8 * [r_2]^4) / [r_8]) + ((560 * [eps_2]^5 * [eps_3]^2 * [r_2] * [r_3]^2 * cos(-6*([phi_3] - [phi_2]))) / [r_8]) + ((35 * [eps_2]^4 * [eps_4]^2 * [r_4]^2 * cos(-8*([phi_4] - [phi_2]))) / [r_8]) + ((420 * [eps_2]^6 * [eps_4] * [r_2]^2 * [r_4] * cos(-4*([phi_4] - [phi_2]))) / [r_8]) + ((56 * [eps_2]^4 * [eps_3] * [eps_5] * [r_3] * [r_5] * cos(8*[phi_2] - 3*[phi_3] - 5*[phi_5])) / [r_8]) + ((28 * [eps_2]^5 * [eps_6] * [r_2] * [r_6] * cos(-6*([phi_6] - [phi_2]))) / [r_8]) + ([eps_2]^4 * [eps_8] * cos(-8*([phi_8] - [phi_2])))) * (((630 * [eps_2]^8 * [r_2]^4) / [r_8]) + ((560 * [eps_2]^5 * [eps_3]^2 * [r_2] * [r_3]^2 * cos(6*([phi_3] - [phi_2]))) / [r_8]) + ((35 * [eps_2]^4 * [eps_4]^2 * [r_4]^2 * cos(8*([phi_4] - [phi_2]))) / [r_8]) + ((420 * [eps_2]^6 * [eps_4] * [r_2]^2 * [r_4] * cos(4*([phi_4] - [phi_2]))) / [r_8]) + ((56 * [eps_2]^4 * [eps_3] * [eps_5] * [r_3] * [r_5] * cos(-8*[phi_2] + 3*[phi_3] + 5*[phi_5])) / [r_8]) + ((28 * [eps_2]^5 * [eps_6] * [r_2] * [r_6] * cos(6*([phi_6] - [phi_2]))) / [r_8]) + ([eps_2]^4 * [eps_8] * cos(8*([phi_8] - [phi_2])))) 
    

    num_e81e42              [eps_8] * [eps_4]^2 * cos(8*([phi_4] - [phi_8])) 
    den_e82e44              [eps_8]^2 * [eps_4]^4 
    num_c81c42              ((5670 * [eps_2]^8 * [r_2]^8) / ([r_4]^2 * [r_8])) + ((35 * [eps_4]^4 * [r_4]^2) / [r_8]) + ((5040 * [eps_2]^5 * [eps_3]^2 * [r_2]^5 * [r_3]^2 * cos(6*([phi_3] - [phi_2]))) / ([r_4]^2 * [r_8])) + ((3780 * [eps_2]^6 * [eps_4] * [r_2]^6 * cos(4*([phi_2] - [phi_4]))) / ([r_4] * [r_8])) + ((3360 * [eps_2]^3 * [eps_3]^2 * [eps_4] * [r_2]^3 * [r_3]^2 * cos(-2*[phi_2] + 6*[phi_3] - 4*[phi_4])) / ([r_4] * [r_8])) + ((210 * [eps_2]^2 * [eps_4]^3 * [r_2]^2 * [r_4] * cos(4*([phi_4] - [phi_2]))) / [r_8]) + ((630 * [eps_2]^4 * [eps_4]^2 * [r_2]^4 * cos(8*([phi_2] - [phi_4]))) / [r_8]) + ((560 * [eps_2] * [eps_3]^2 * [eps_4]^2 * [r_2] * [r_3]^2 * cos(2*[phi_2] + 6*[phi_3] - 8*[phi_4])) / [r_8]) + ((315 * [eps_2]^4 * [eps_4]^2 * [r_2]^4 * cos(8*([phi_4] -[phi_2]))) / [r_8]) + ((3780 * [eps_2]^6 * [eps_4] * [r_2]^6 * cos(4*([phi_4] - [phi_2]))) / ([r_4] * [r_8])) + ((2520 * [eps_2]^4 * [eps_4]^2 * [r_2]^4 ) / [r_8]) + ((420 * [eps_2]^2 * [eps_4]^3 * [r_2]^2 * [r_4] * cos(4*([phi_2] - [phi_4]))) / [r_8]) + ((504 * [eps_2]^4 * [eps_3] * [eps_5] * [r_2]^4 * [r_3] * [r_5] * cos(-8*[phi_2] + 3*[phi_3] + 5*[phi_5])) / ([r_4]^2 * [r_8])) + ((336 * [eps_2]^2 * [eps_3] * [eps_4] * [eps_5] * [r_2]^2 * [r_3] * [r_5] * cos(-4*[phi_2] + 3*[phi_3] - 4*[phi_4] + 5*[phi_5])) / ([r_4]* [r_8])) + ((56 * [eps_3] * [eps_4]^2 * [eps_5] * [r_3] * [r_5] * cos(3*[phi_3] - 8*[phi_4] + 5*[phi_5])) / [r_8]) + ((252 * [eps_2]^5 * [eps_6] * [r_2]^5 * [r_6] * cos(6*([phi_6] - [phi_2]))) / ([r_4]^2 * [r_8])) + ((168 * [eps_2]^3 * [eps_4] * [eps_6] * [r_2]^3 * [r_6] * cos(-2*[phi_2] - 4*[phi_4] + 6*[phi_6])) / ([r_4] * [r_8])) + ((28 * [eps_2] * [eps_4]^2 * [eps_6] * [r_2] * [r_6] * cos(2*[phi_2] - 8*[phi_4] + 6*[phi_6])) / [r_8]) + ((9 * [eps_2]^4 * [eps_8] * [r_2]^4 * cos(8*([phi_8] - [phi_2]))) / [r_4]^2) + ((6 * [eps_2]^2 * [eps_4] * [eps_8] * [r_2]^2 * cos(-4*[phi_2] - 4*[phi_4] + 8*[phi_8])) / [r_4]) + ([eps_4]^2 * [eps_8] * cos(8*([phi_8] - [phi_4]))) 
    
    den_c82c44              (((5670 * [eps_2]^8 * [r_2]^8) / ([r_4]^2 * [r_8])) + ((35 * [eps_4]^4 * [r_4]^2) / [r_8]) + ((5040 * [eps_2]^5 * [eps_3]^2 * [r_2]^5 * [r_3]^2 * cos(-6*([phi_3] - [phi_2]))) / ([r_4]^2 * [r_8])) + ((3780 * [eps_2]^6 * [eps_4] * [r_2]^6 * cos(-4*([phi_2] - [phi_4]))) / ([r_4] * [r_8])) + ((3360 * [eps_2]^3 * [eps_3]^2 * [eps_4] * [r_2]^3 * [r_3]^2 * cos(2*[phi_2] - 6*[phi_3] + 4*[phi_4])) / ([r_4] * [r_8])) + ((210 * [eps_2]^2 * [eps_4]^3 * [r_2]^2 * [r_4] * cos(-4*([phi_4] - [phi_2]))) / [r_8]) + ((630 * [eps_2]^4 * [eps_4]^2 * [r_2]^4 * cos(-8*([phi_2] - [phi_4]))) / [r_8]) + ((560 * [eps_2] * [eps_3]^2 * [eps_4]^2 * [r_2] * [r_3]^2 * cos(-2*[phi_2] - 6*[phi_3] + 8*[phi_4])) / [r_8]) + ((315 * [eps_2]^4 * [eps_4]^2 * [r_2]^4 * cos(-8*([phi_4] -[phi_2]))) / [r_8]) + ((3780 * [eps_2]^6 * [eps_4] * [r_2]^6 * cos(-4*([phi_4] - [phi_2]))) / ([r_4] * [r_8])) + ((2520 * [eps_2]^4 * [eps_4]^2 * [r_2]^4 ) / [r_8]) + ((420 * [eps_2]^2 * [eps_4]^3 * [r_2]^2 * [r_4] * cos(-4*([phi_2] - [phi_4]))) / [r_8]) + ((504 * [eps_2]^4 * [eps_3] * [eps_5] * [r_2]^4 * [r_3] * [r_5] * cos(8*[phi_2] - 3*[phi_3] - 5*[phi_5])) / ([r_4]^2 * [r_8])) + ((336 * [eps_2]^2 * [eps_3] * [eps_4] * [eps_5] * [r_2]^2 * [r_3] * [r_5] * cos(4*[phi_2] - 3*[phi_3] + 4*[phi_4] - 5*[phi_5])) / ([r_4]* [r_8])) + ((56 * [eps_3] * [eps_4]^2 * [eps_5] * [r_3] * [r_5] * cos(-3*[phi_3] + 8*[phi_4] - 5*[phi_5])) / [r_8]) + ((252 * [eps_2]^5 * [eps_6] * [r_2]^5 * [r_6] * cos(-6*([phi_6] - [phi_2]))) / ([r_4]^2 * [r_8])) + ((168 * [eps_2]^3 * [eps_4] * [eps_6] * [r_2]^3 * [r_6] * cos(2*[phi_2] + 4*[phi_4] - 6*[phi_6])) / ([r_4] * [r_8])) + ((28 * [eps_2] * [eps_4]^2 * [eps_6] * [r_2] * [r_6] * cos(-2*[phi_2] + 8*[phi_4] - 6*[phi_6])) / [r_8]) + ((9 * [eps_2]^4 * [eps_8] * [r_2]^4 * cos(-8*([phi_8] - [phi_2]))) / [r_4]^2) + ((6 * [eps_2]^2 * [eps_4] * [eps_8] * [r_2]^2 * cos(4*[phi_2] + 4*[phi_4] - 8*[phi_8])) / [r_4]) + ([eps_4]^2 * [eps_8] * cos(-8*([phi_8] - [phi_4])))) * (((5670 * [eps_2]^8 * [r_2]^8) / ([r_4]^2 * [r_8])) + ((35 * [eps_4]^4 * [r_4]^2) / [r_8]) + ((5040 * [eps_2]^5 * [eps_3]^2 * [r_2]^5 * [r_3]^2 * cos(6*([phi_3] - [phi_2]))) / ([r_4]^2 * [r_8])) + ((3780 * [eps_2]^6 * [eps_4] * [r_2]^6 * cos(4*([phi_2] - [phi_4]))) / ([r_4] * [r_8])) + ((3360 * [eps_2]^3 * [eps_3]^2 * [eps_4] * [r_2]^3 * [r_3]^2 * cos(-2*[phi_2] + 6*[phi_3] - 4*[phi_4])) / ([r_4] * [r_8])) + ((210 * [eps_2]^2 * [eps_4]^3 * [r_2]^2 * [r_4] * cos(4*([phi_4] - [phi_2]))) / [r_8]) + ((630 * [eps_2]^4 * [eps_4]^2 * [r_2]^4 * cos(8*([phi_2] - [phi_4]))) / [r_8]) + ((560 * [eps_2] * [eps_3]^2 * [eps_4]^2 * [r_2] * [r_3]^2 * cos(2*[phi_2] + 6*[phi_3] - 8*[phi_4])) / [r_8]) + ((315 * [eps_2]^4 * [eps_4]^2 * [r_2]^4 * cos(8*([phi_4] -[phi_2]))) / [r_8]) + ((3780 * [eps_2]^6 * [eps_4] * [r_2]^6 * cos(4*([phi_4] - [phi_2]))) / ([r_4] * [r_8])) + ((2520 * [eps_2]^4 * [eps_4]^2 * [r_2]^4 ) / [r_8]) + ((420 * [eps_2]^2 * [eps_4]^3 * [r_2]^2 * [r_4] * cos(4*([phi_2] - [phi_4]))) / [r_8]) + ((504 * [eps_2]^4 * [eps_3] * [eps_5] * [r_2]^4 * [r_3] * [r_5] * cos(-8*[phi_2] + 3*[phi_3] + 5*[phi_5])) / ([r_4]^2 * [r_8])) + ((336 * [eps_2]^2 * [eps_3] * [eps_4] * [eps_5] * [r_2]^2 * [r_3] * [r_5] * cos(-4*[phi_2] + 3*[phi_3] - 4*[phi_4] + 5*[phi_5])) / ([r_4]* [r_8])) + ((56 * [eps_3] * [eps_4]^2 * [eps_5] * [r_3] * [r_5] * cos(3*[phi_3] - 8*[phi_4] + 5*[phi_5])) / [r_8]) + ((252 * [eps_2]^5 * [eps_6] * [r_2]^5 * [r_6] * cos(6*([phi_6] - [phi_2]))) / ([r_4]^2 * [r_8])) + ((168 * [eps_2]^3 * [eps_4] * [eps_6] * [r_2]^3 * [r_6] * cos(-2*[phi_2] - 4*[phi_4] + 6*[phi_6])) / ([r_4] * [r_8])) + ((28 * [eps_2] * [eps_4]^2 * [eps_6] * [r_2] * [r_6] * cos(2*[phi_2] - 8*[phi_4] + 6*[phi_6])) / [r_8]) + ((9 * [eps_2]^4 * [eps_8] * [r_2]^4 * cos(8*([phi_8] - [phi_2]))) / [r_4]^2) + ((6 * [eps_2]^2 * [eps_4] * [eps_8] * [r_2]^2 * cos(-4*[phi_2] - 4*[phi_4] + 8*[phi_8])) / [r_4]) + ([eps_4]^2 * [eps_8] * cos(8*([phi_8] - [phi_4])))) 


    num_e61e23              [eps_2]^3 * [eps_6] * cos(6*([phi_6] - [phi_2])) 
    den_e62e26              [eps_2]^6 * [eps_6]^2 
    num_c61c23              ((30 * [eps_2]^6 * [r_2]^3) / [r_6]) + ((10 * [eps_2]^3 * [eps_3]^2 * [r_3]^2 * cos(6*([phi_2] - [phi_3]))) / [r_6]) + ((15 * [eps_2]^4 * [eps_4] * [r_2] * [r_4] * cos(4*([phi_2] - [phi_4]))) /[r_6]) + ([eps_2]^3 * [eps_6] * cos(6*([phi_2] - [phi_6]))) 

    den_c62c26              ((900 * [r_2]^6 * [eps_2]^12) / ([r_6]^2)) + ((300 * [r_2]^3 * [r_3]^2 * [eps_2]^9 * [eps_3]^2 * cos(6*([phi_3] - [phi_2]))) / ([r_6]^2)) + ((450 * [r_2]^4 * [r_4] * [eps_2]^10 * [eps_4] * cos(4*([phi_4] - [phi_2]))) / ([r_6]^2)) + ((30 * [r_2]^3 * [eps_2]^9 * [eps_6] * cos(6*([phi_6] - [phi_2]))) / [r_6]) + ((300 * [r_2]^3 * [r_3]^2 * [eps_2]^9 * [eps_3]^2 * cos(6*([phi_2] - [phi_3]))) / ([r_6]^2)) + ((100 * [r_3]^4 * [eps_2]^6 * [eps_3]^4) / ([r_6]^2)) + ((150 * [r_2] * [r_3]^2 * [r_4] * [eps_2]^7 * [eps_3]^2 * [eps_4] * cos(2*[phi_2] - 6*[phi_3] + 4*[phi_4])) / ([r_6]^2)) + ((10 * [r_3]^2 * [eps_2]^6 * [eps_3]^2 * [eps_6] * cos(6*([phi_6] - [phi_3]))) / [r_6]) + ((450 * [r_2]^4 * [r_4] * [eps_2]^10 * [eps_4] * cos(4*([phi_2] - [phi_4]))) / ([r_6]^2)) + ((150 * [r_2] * [r_3]^2 * [r_4] * [eps_2]^7 * [eps_3]^2 * [eps_4] * cos(-2*[phi_2] + 6*[phi_3] - 4*[phi_4])) / ([r_6]^2)) + ((225 * [r_2]^2 * [r_4]^2 * [eps_2]^8 * [eps_4]^2) / ([r_6]^2)) + ((15 * [r_2] * [r_4] * [eps_2]^7 * [eps_4] * [eps_6] * cos(-2*[phi_2] - 4*[phi_4] + 6*[phi_6])) / [r_6]) + ((30 * [r_2]^3 * [eps_2]^9 * [eps_6] * cos(6*([phi_2] - [phi_6]))) / [r_6]) + ((10 * [r_3]^2 * [eps_2]^6 * [eps_3]^2 * [eps_6] * cos(6*([phi_3] - [phi_6]))) / [r_6]) + ((15 * [r_2] * [r_4] * [eps_2]^7 * [eps_4] * [eps_6] * cos(2*[phi_2] + 4*[phi_4] - 6*[phi_6])) / [r_6]) + ([eps_2]^6 * [eps_6]^2) 


    num_e61e32              [eps_3]^2 * [eps_6] * cos(6*([phi_6]-[phi_3])) 
    den_e62e34              [eps_3]^4 * [eps_6]^2 
    num_c61c32              ((10 * [eps_3]^4 * [r_3]^2) / [r_6]) + ((30 * [eps_2]^3 * [eps_3]^2 * [r_2]^3 * cos(6*([phi_3] - [phi_2]))) / [r_6]) + ((15 * [eps_2] * [eps_3]^2 * [eps_4] * [r_2] * [r_4] * cos(6*[phi_3] - 2*[phi_2] - 4*[phi_4])) / [r_6]) + ([eps_3]^2 * [eps_6] * cos(6*([phi_3] - [phi_6]))) 

    den_c62c34              ((900 * [r_2]^6 * [eps_2]^6 * [eps_3]^4) / ([r_6]^2)) + ((300 * [r_2]^3 * [r_3]^2 * [eps_2]^3 * [eps_3]^6 * cos(6*([phi_3] - [phi_2]))) / ([r_6]^2)) + ((450 * [r_2]^4 * [r_4] * [eps_2]^4 * [eps_3]^4 * [eps_4] * cos(4*([phi_4] - [phi_2]))) / ([r_6]^2)) + ((30 * [r_2]^3 * [eps_2]^3 * [eps_3]^4 * [eps_6] * cos(6*([phi_6] - [phi_2]))) / [r_6]) + ((300 * [r_2]^3 * [r_3]^2 * [eps_2]^3 * [eps_3]^6 * cos(6*([phi_2] - [phi_3]))) / ([r_6]^2)) + ((100 * [r_3]^4 * [eps_3]^8) / ([r_6]^2)) + ((150 * [r_2] * [r_3]^2 * [r_4] * [eps_2] * [eps_3]^6 * [eps_4] * cos(2*[phi_2] - 6*[phi_3] + 4*[phi_4])) / ([r_6]^2)) + ((10 * [r_3]^2 * [eps_3]^6 * [eps_6] * cos(6*([phi_6] - [phi_3]))) / [r_6]) + ((450 * [r_2]^4 * [r_4] * [eps_2]^4 * [eps_3]^4 * [eps_4] * cos(4*([phi_2] - [phi_4]))) / ([r_6]^2)) + ((150 * [r_2] * [r_3]^2 * [r_4] * [eps_2] * [eps_3]^6 * [eps_4] * cos(-2*[phi_2] + 6*[phi_3] - 4*[phi_4])) / ([r_6]^2)) + ((225 * [r_2]^2 * [r_4]^2 * [eps_2]^2 * [eps_3]^4 * [eps_4]^2) / ([r_6]^2)) + ((15 * [r_2] * [r_4] * [eps_2] * [eps_3]^4 * [eps_4] * [eps_6] * cos(-2*[phi_2] - 4*[phi_4] + 6*[phi_6])) / [r_6]) + ((30 * [r_2]^3 * [eps_2]^3 * [eps_3]^4 * [eps_6] * cos(6*([phi_2] - [phi_6]))) / [r_6]) + ((10 * [r_3]^2 * [eps_3]^6 * [eps_6] * cos(6*([phi_3] - [phi_6]))) / [r_6]) + ((15 * [r_2] * [r_4] * [eps_2] * [eps_3]^4 * [eps_4] * [eps_6] * cos(2*[phi_2] + 4*[phi_4] - 6*[phi_6])) / [r_6]) + ([eps_3]^4 * [eps_6]^2) 
FE

------------------------------------------
Observables:
    GE_e_psi3_npsi2         sqrt(pi/4) * ([num_e23e32]) / sqrt([den_e26e34])
    GE_c_psi3_npsi2         sqrt(pi/4) * ([num_e23e32]) / sqrt([den_e26e34])

    GE_e_psi4_npsi2         sqrt(pi/4) * ([num_e22e41]) / sqrt([den_e24e42])
    GE_c_psi4_npsi2         sqrt(pi/4) * ([num_c22c41]) / sqrt([den_c24c42])

    GE_e_8psi4_npsi2        sqrt(pi/4) * ([num_e24e42]) / sqrt([den_e28e44])
    GE_c_8psi4_npsi2        sqrt(pi/4) * ([num_c24c42]) / sqrt([den_c28c44])

    GE_e_psi8_npsi2         sqrt(pi/4) * ([num_e24e81]) / sqrt([den_e28e82])
    GE_c_psi8_npsi2         sqrt(pi/4) * ([num_c24c81]) / sqrt([den_c28c82])

    GE_e_psi8_npsi4         sqrt(pi/4) * ([num_e81e42]) / sqrt([den_e82e44])
    GE_c_psi8_npsi4         sqrt(pi/4) * ([num_c81c42]) / sqrt([den_c82c44])

    GE_e_psi6_npsi2         sqrt(pi/4) * ([num_e61e23]) / sqrt([den_e62e26])
    GE_c_psi6_npsi2         sqrt(pi/4) * ([num_c61c23]) / sqrt([den_c62c26])

    GE_e_psi6_npsi3         sqrt(pi/4) * ([num_e61e32]) / sqrt([den_e62e34])
    GE_c_psi6_npsi3         sqrt(pi/4) * ([num_c61c32]) / sqrt([den_c62c34])

OE